{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./cartridges/bm_cricut_pagedesigner/cartridge/client/default/js/experience/editors/themer/colorpicker.js","webpack:///./cartridges/plugin_cricut_pagedesigner/cartridge/client/default/js/variables.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEb;AACA,sBAAsB,mBAAO,CAAC,sGAAc;AAC5C;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,KAAK;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2GAA2G,WAAW;AACtH,mEAAmE,UAAU;AAC7E,6DAA6D,UAAU;AACvE;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB,aAAa;AACb;AACA,8DAA8D;AAC9D,gDAAgD;AAChD,gDAAgD;AAChD;;AAEA;AACA;;AAEA,oBAAoB;AACpB,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C,4CAA4C;AAC5C,4CAA4C;AAC5C,4CAA4C;AAC5C,4CAA4C;AAC5C,4CAA4C;AAC5C;;AAEA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAA0B;AAClD;;AAEA;AACA;AACA,sGAAsG,0BAA0B;AAChI,wBAAwB,qCAAqC;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,mEAAmE;AACpG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,0CAA0C,uBAAuB;AACjE,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA,mCAAmC,EAAE;AACrC;AACA,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,CAAC;;;;;;;;;;;;ACxUD;AACA;AACA,SAAS,yEAAyE,2BAA2B,EAAE;AAC/G,SAAS,2FAA2F,2BAA2B,EAAE;AACjI,SAAS,mFAAmF,2BAA2B,EAAE;AACzH,SAAS,2EAA2E,2BAA2B,EAAE;AACjH,SAAS,uFAAuF,2BAA2B;AAC3H;AACA;AACA,SAAS,qEAAqE,2BAA2B,EAAE;AAC3G,SAAS,6EAA6E,2BAA2B,EAAE;AACnH,SAAS,2EAA2E,2BAA2B,EAAE;AACjH,SAAS,qEAAqE,2BAA2B,EAAE;AAC3G,SAAS,+EAA+E,2BAA2B,EAAE;AACrH,SAAS,iEAAiE,2BAA2B,EAAE;AACvG,SAAS,6EAA6E,2BAA2B,EAAE;AACnH,SAAS,qEAAqE,2BAA2B;AACzG;AACA;AACA,SAAS,iEAAiE,2BAA2B,EAAE;AACvG,SAAS,qEAAqE,2BAA2B,EAAE;AAC3G,SAAS,uEAAuE,2BAA2B,EAAE;AAC7G,SAAS,mEAAmE,2BAA2B,EAAE;AACzG,SAAS,uEAAuE,2BAA2B,EAAE;AAC7G,SAAS,mEAAmE,2BAA2B,EAAE;AACzG,SAAS,+EAA+E,2BAA2B,EAAE;AACrH,SAAS,6EAA6E,2BAA2B,EAAE;AACnH,SAAS,uEAAuE,2BAA2B,EAAE;AAC7G,SAAS,6EAA6E,2BAA2B,EAAE;AACnH,SAAS,uEAAuE,2BAA2B,EAAE;AAC7G,SAAS,6EAA6E,2BAA2B,EAAE;AACnH,SAAS,mFAAmF,2BAA2B,EAAE;AACzH,SAAS,mFAAmF,2BAA2B;AACvH;AACA;AACA,SAAS,+EAA+E,2BAA2B,EAAE;AACrH,SAAS,mFAAmF,2BAA2B,EAAE;AACzH,SAAS,iFAAiF,2BAA2B,EAAE;AACvH,SAAS,mFAAmF,2BAA2B,EAAE;AACzH,SAAS,uFAAuF,2BAA2B,EAAE;AAC7H,SAAS,qFAAqF,2BAA2B,EAAE;AAC3H,SAAS,mFAAmF,2BAA2B,EAAE;AACzH,SAAS,uFAAuF,2BAA2B,EAAE;AAC7H,SAAS,qFAAqF,2BAA2B;AACzH;AACA;AACA,SAAS,6EAA6E,2BAA2B,EAAE;AACnH;AACA;;AAEA;AACA,aAAa,6BAA6B;AAC1C,eAAe;AACf;;AAEA;AACA;AACA;AACA","file":"default/js/experience/editors/themer/colorpicker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./cartridges/bm_cricut_pagedesigner/cartridge/client/default/js/experience/editors/themer/colorpicker.js\");\n","'use strict';\n\n(() => {\n    const variables = require('pd/variables');\n    var rootEditorElement;\n    var currentHSV;\n\n    /**\n     * Generate color selections\n     * @param {object} colors the color variables\n     * @returns {HTML} markup that is rendered\n     */\n    function generateColorsHTML(colors) {\n        var markup = ``;\n\n        Object.keys(colors).forEach(key => {\n            colors[key].map(color => {\n            markup += `\n            <li class=\"slds-color-picker__swatch\" role=\"presentation\">\n                <a class=\"slds-color-picker__swatch-trigger\" href=\"#\" role=\"option\" tabindex=\"-1\" title=\"${color.name}\">\n                    <span class=\"slds-swatch\" style=\"background:#${color.hex}\">\n                        <span class=\"slds-assistive-text\">#${color.hex}</span>\n                    </span>\n                </a>\n            </li>`;\n            });\n        });\n\n        return markup;\n    };\n\n    /**\n     * initializes the base markup before page is ready. This is not part of the API, and called explicitely at the end of this module.\n     */\n    function init() {\n        rootEditorElement = document.createElement('div');\n        rootEditorElement.innerHTML = `\n    <div class=\"slds-color-picker\">\n    <div class=\"slds-form-element slds-color-picker__summary\">\n        <div class=\"slds-form-element__control\">\n            <button class=\"slds-button slds-color-picker__summary-button slds-button_icon slds-button_icon-more\" title=\"Choose Color\">\n                <span class=\"slds-swatch\" style=\"background:hsl(0, 0%, 0%)\">\n                    <span class=\"slds-assistive-text\">hsl(0, 0%, 0%)</span>\n                </span>\n                <svg class=\"slds-button__icon slds-button__icon_small slds-m-left_xx-small\" aria-hidden=\"true\" viewBox=\"0 0 24 24\" >\n                    <path d=\"M3.8 6.5h16.4c.4 0 .8.6.4 1l-8 9.8c-.3.3-.9.3-1.2 0l-8-9.8c-.4-.4-.1-1 .4-1z\"></path>\n                </svg>\n            <span class=\"slds-assistive-text\">Choose a color. Current color: #000000</span>\n</button>\n        <div class=\"slds-color-picker__summary-input\">\n            <input type=\"text\" id=\"color-picker-summary-input\" class=\"slds-input\" value=\"#000000\" />\n        </div>\n    </div>\n</div>\n    <section aria-describedby=\"dialog-body-id-9\" aria-label=\"Choose a color\" class=\"slds-popover slds-color-picker__selector slds-hide\" role=\"dialog\">\n        <div class=\"slds-popover__body\" id=\"dialog-body-id-9\">\n            <div class=\"slds-tabs_default\">\n                <ul class=\"slds-tabs_default__nav\" role=\"tablist\">\n                    <li class=\"slds-tabs_default__item colorpicker-default-tab slds-is-active\" title=\"Default\" role=\"presentation\">\n                        <a class=\"slds-tabs_default__link\" href=\"javascript:void(0);\" role=\"tab\" tabindex=\"0\" aria-selected=\"true\" aria-controls=\"color-picker-default\" id=\"color-picker-default__item\">Default</a>\n                    </li>\n                    <li class=\"slds-tabs_default__item colorpicker-custom-tab\" title=\"Custom\" role=\"presentation\">\n                        <a class=\"slds-tabs_default__link\" href=\"javascript:void(0);\" role=\"tab\" tabindex=\"-1\" aria-selected=\"false\" aria-controls=\"color-picker-custom\" id=\"color-picker-custom__item\">Custom</a>\n                    </li>\n                </ul>\n                <div id=\"color-picker-default\" class=\"slds-tabs_default__content slds-show\" role=\"tabpanel\" aria-labelledby=\"color-picker-default__item\">\n                    <ul class=\"slds-color-picker__swatches\" role=\"listbox\">\n                        ${generateColorsHTML(variables.brandColors)}\n                    </ul>\n                </div>\n                <div id=\"color-picker-custom\" class=\"slds-tabs_default__content slds-hide\" role=\"tabpanel\" aria-labelledby=\"color-picker-custom__item\">\n                    <div class=\"slds-color-picker__custom\">\n                        <p id=\"color-picker-instructions\" class=\"slds-assistive-text\">Use arrow keys to select a saturation and brightness, on an x and y axis.</p>\n                        <div class=\"slds-color-picker__custom-range\" style=\"background:hsl(220, 100%, 50%)\">\n                            <a class=\"slds-color-picker__range-indicator\" style=\"bottom:45%;left:46%\" href=\"#\" aria-live=\"assertive\" aria-atomic=\"true\" aria-describedby=\"color-picker-instructions\" draggable=\"true\">\n                                <span class=\"slds-assistive-text\">Saturation: 46%. Brightness: 45%.</span>\n                            </a>\n                        </div>\n                        <div class=\"slds-color-picker__hue-and-preview\">\n                            <label class=\"slds-assistive-text\" for=\"color-picker-input-range-9\">Select Hue</label>\n                            <input type=\"range\" class=\"slds-color-picker__hue-slider\" min=\"0\" max=\"360\" id=\"color-picker-input-range-9\" value=\"208\" />\n                            <span class=\"slds-swatch\" style=\"background:#000000\">\n                                <span class=\"slds-assistive-text\" aria-hidden=\"true\">#000000</span>\n                            </span>\n                        </div>\n                        <div class=\"slds-color-picker__custom-inputs\">\n                            <div class=\"slds-form-element slds-color-picker__input-custom-hex\">\n                                <label class=\"slds-form-element__label\" for=\"color-picker-input-hex-9\">Hex</label>\n                                <div class=\"slds-form-element__control\">\n                                    <input type=\"text\" id=\"color-picker-input-hex-9\" disabled=\"true\" class=\"slds-input\" value=\"#000000\" />\n                                </div>\n                            </div>\n                            <div class=\"slds-form-element\">\n                                <label class=\"slds-form-element__label\" for=\"color-picker-input-r-9\">\n                                    <abbr title=\"Red\">R</abbr>\n                                </label>\n                                <div class=\"slds-form-element__control\">\n                                    <input type=\"text\" id=\"color-picker-input-r-9\" disabled=\"true\" class=\"slds-input\" value=\"86\" />\n                                </div>\n                            </div>\n                            <div class=\"slds-form-element\">\n                                <label class=\"slds-form-element__label\" for=\"color-picker-input-g-9\">\n                                    <abbr title=\"Green\">G</abbr>\n                                </label>\n                                <div class=\"slds-form-element__control\">\n                                    <input type=\"text\" id=\"color-picker-input-g-9\" disabled=\"true\" class=\"slds-input\" value=\"121\" />\n                                </div>\n                            </div>\n                            <div class=\"slds-form-element\">\n                                <label class=\"slds-form-element__label\" disabled=\"true\" for=\"color-picker-input-b-9\">\n                                    <abbr title=\"blue\">B</abbr>\n                                </label>\n                                <div class=\"slds-form-element__control\">\n                                    <input type=\"text\" id=\"color-picker-input-b-9\" disabled=\"true\" class=\"slds-input\" value=\"192\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <footer class=\"slds-popover__footer\">\n            <div class=\"slds-color-picker__selector-footer\">\n                <button class=\"slds-button slds-button_neutral\" id=\"cancel-button\">Cancel</button>\n                <button class=\"slds-button slds-button_brand\" id=\"confirm-button\">Done</button>\n            </div>\n        </footer>\n    </section>\n</div >`;\n\n        document.body.appendChild(rootEditorElement);\n\n        var r = rootEditorElement.querySelector('#color-picker-input-r-9').value;\n        var g = rootEditorElement.querySelector('#color-picker-input-g-9').value;\n        var b = rootEditorElement.querySelector('#color-picker-input-b-9').value;\n        currentHSV = ColorUtils.rgbToHsv({ r, g, b });\n    };\n\n    var ColorUtils = {\n        /**\n         * Converts an RGB color value to HSV. Conversion formula\n         * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n         * Assumes r, g, and b are contained in the set [0, 255] and\n         * returns h, s, and v in the set [0, 1].\n         *\n         * @param   Number  r       The red color value\n         * @param   Number  g       The green color value\n         * @param   Number  b       The blue color value\n         * @return  Array           The HSV representation\n         */\n        rgbToHsv: function rgbToHsv(rgb) {\n            let r = rgb.r;\n            let g = rgb.g;\n            let b = rgb.b;\n            r /= 255, g /= 255, b /= 255;\n\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\n            var h, s, v = max;\n\n            var d = max - min;\n            s = max == 0 ? 0 : d / max;\n\n            if (max == min) {\n                h = 0; // achromatic\n            } else {\n                switch (max) {\n                    case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n                    case g: h = (b - r) / d + 2; break;\n                    case b: h = (r - g) / d + 4; break;\n                }\n\n                h /= 6;\n            }\n\n            return { h, s, v };\n        },\n\n        /**\n         * Converts an HSV color value to RGB. Conversion formula\n         * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n         * Assumes h, s, and v are contained in the set [0, 1] and\n         * returns r, g, and b in the set [0, 255].\n         *\n         * @param   Number  h       The hue\n         * @param   Number  s       The saturation\n         * @param   Number  v       The value\n         * @return  Array           The RGB representation\n         */\n        hsvToRgb: function hsvToRgb(hsv) {\n            let h = hsv.h;\n            let s = hsv.s;\n            let v = hsv.v;\n            var r, g, b;\n\n            var i = Math.floor(h * 6);\n            var f = h * 6 - i;\n            var p = v * (1 - s);\n            var q = v * (1 - f * s);\n            var t = v * (1 - (1 - f) * s);\n\n            switch (i % 6) {\n                case 0: r = v, g = t, b = p; break;\n                case 1: r = q, g = v, b = p; break;\n                case 2: r = p, g = v, b = t; break;\n                case 3: r = p, g = q, b = v; break;\n                case 4: r = t, g = p, b = v; break;\n                case 5: r = v, g = p, b = q; break;\n            }\n\n            return {r: Math.round(r * 255), g: Math.round(g * 255), b: Math.round(b * 255)};\n        },\n        componentToHex: function componentToHex(c) {\n            var hex = c.toString(16);\n            return hex.length == 1 ? \"0\" + hex : hex;\n        },\n\n        rgbToHex: function rgbToHex(rgb) {\n            return \"#\" + this.componentToHex(rgb.r) + this.componentToHex(rgb.g) + this.componentToHex(rgb.b);\n        }\n    };\n\n    function toggleColorPanelVisibility() {\n        rootEditorElement.querySelector('.slds-color-picker__selector').classList.toggle(\"slds-hide\");\n        rootEditorElement.querySelector('.slds-color-picker__selector').classList.toggle(\"slds-show\");\n    }\n\n    function switchElementsVisibility(selectorToHide, selectorToShow) {\n        rootEditorElement.querySelector(selectorToHide).classList.add(\"slds-hide\");\n        rootEditorElement.querySelector(selectorToHide).classList.remove(\"slds-show\");\n\n        rootEditorElement.querySelector(selectorToShow).classList.add(\"slds-show\");\n        rootEditorElement.querySelector(selectorToShow).classList.remove(\"slds-hide\");\n    }\n\n    function satLumHandler(event) {\n        event.preventDefault();\n        var saturation = event.layerX / event.currentTarget.offsetWidth;\n        var value = 1 - (event.layerY / event.currentTarget.offsetHeight);\n        rootEditorElement.querySelector('.slds-color-picker__range-indicator').style.left = saturation * 100 + '%';\n        rootEditorElement.querySelector('.slds-color-picker__range-indicator').style.bottom = (value * 100) + '%';\n        updateCustomUI({ s: saturation, v: value })\n    }\n\n    function hueHandler(event) {\n        event.preventDefault();\n        rootEditorElement.querySelector('.slds-color-picker__custom-range').style.background = `hsl(${event.currentTarget.value}, 100%, 50%)`;\n        updateCustomUI({ h: event.currentTarget.value / 360 })\n    }\n\n    function updateCustomUI(updatedObject) {\n        currentHSV = Object.assign(currentHSV, updatedObject);\n        var rgb = ColorUtils.hsvToRgb(currentHSV);\n\n        rootEditorElement.querySelector('#color-picker-input-r-9').value = rgb.r;\n        rootEditorElement.querySelector('#color-picker-input-g-9').value = rgb.g;\n        rootEditorElement.querySelector('#color-picker-input-b-9').value = rgb.b;\n        var hex = ColorUtils.rgbToHex(rgb);\n        rootEditorElement.querySelector('#color-picker-input-hex-9').value = hex;\n        rootEditorElement.querySelector('#color-picker-custom .slds-swatch').style.backgroundColor = hex;\n    }\n\n    /** the page designer signals readiness to show this editor and provides an optionally pre selected value */\n    listen('sfcc:ready', async ({ value, config, isDisabled, isRequired, dataLocale, displayLocale }) => {\n        const selectedValue = typeof value === 'object' && value !== null && typeof value.value === 'string' ? value.value : null;\n\n        rootEditorElement.querySelector('.slds-color-picker__summary-button').addEventListener('click', toggleColorPanelVisibility);\n        rootEditorElement.querySelector('.colorpicker-custom-tab').addEventListener('click', () => switchElementsVisibility('#color-picker-default', '#color-picker-custom'));\n        rootEditorElement.querySelector('.colorpicker-default-tab').addEventListener('click', () => switchElementsVisibility('#color-picker-custom', '#color-picker-default'));\n        rootEditorElement.querySelectorAll('.slds-tabs_default__item').forEach(tab => tab.addEventListener('click', (event) => {\n            rootEditorElement.querySelectorAll('.slds-tabs_default__item').forEach((element) => element.classList.remove('slds-is-active'));\n            event.currentTarget.classList.add('slds-is-active');\n        }));\n        rootEditorElement.querySelector('#cancel-button').addEventListener('click', toggleColorPanelVisibility);\n        rootEditorElement.querySelector('#confirm-button').addEventListener('click', () => {\n            var selectedColor = rootEditorElement.querySelector('#color-picker-input-hex-9').value\n            rootEditorElement.querySelector('#color-picker-summary-input').value = selectedColor;\n            rootEditorElement.querySelector('#color-picker-summary-input').dispatchEvent(new Event('change'));\n            toggleColorPanelVisibility();\n        });\n\n        rootEditorElement.querySelector('.slds-color-picker__custom-range').addEventListener('dragover', satLumHandler);\n        rootEditorElement.querySelector('.slds-color-picker__custom-range').addEventListener('drop', satLumHandler);\n        rootEditorElement.querySelector('.slds-color-picker__custom-range').addEventListener('click', satLumHandler);\n        rootEditorElement.querySelector('#color-picker-input-range-9').addEventListener('input', hueHandler);\n\n        rootEditorElement.querySelectorAll('.slds-color-picker__swatch-trigger').forEach(\n            function (element) {\n                element.addEventListener('click', function (event) {\n                    event.preventDefault();\n                    var selectedColor = event.target.querySelector('.slds-assistive-text').innerHTML;\n                    rootEditorElement.querySelector('#color-picker-summary-input').value = selectedColor;\n                    rootEditorElement.querySelector('#color-picker-summary-input').dispatchEvent(new Event('change'));\n                    toggleColorPanelVisibility();\n                });\n            });\n\n        rootEditorElement.querySelector('#color-picker-summary-input').addEventListener('change', function (event) {\n            const selectedValue = event.target.value;\n            rootEditorElement.querySelector('.slds-color-picker__summary-button .slds-swatch').style.backgroundColor = selectedValue;\n\n            emit({\n                type: 'sfcc:interacted'\n            });\n            emit({\n                type: 'sfcc:value',\n                payload: selectedValue ? { value: selectedValue } : null\n            });\n        });\n\n        if (selectedValue) {\n            rootEditorElement.querySelector('#color-picker-summary-input').value = selectedValue;\n            rootEditorElement.querySelector('#color-picker-summary-input').dispatchEvent(new Event('change'));\n        }\n\n    });\n    // When a value was selected\n    listen('sfcc:value', value => { });\n    // When the editor must require the user to select something\n    listen('sfcc:required', value => { });\n    // When the editor is asked to disable its controls\n    listen('sfcc:disabled', value => {\n        if (rootEditorElement) {\n            rootEditorElement.querySelector('.recommendation-selection').disabled = true;\n        }\n    });\n\n    init();\n\n})();\n","const brandColors = {\n    primary: [\n        {name: 'Forrest', variable: 'forrest', hex: '0a3728', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Accessible Green', variable: 'accessible-green', hex: '168666', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Cricut Green', variable: 'cricut-green', hex: '00a977', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Shamrock', variable: 'shamrock', hex: 'b9dcc8', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Shamrock Light', variable: 'shamrock-light', hex: 'dcede3', contrastPairings: [{name:'black', hex:'000000'}]}\n    ],\n    neutral: [\n        {name: 'Black', variable: 'black', hex: '000000', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Dark Gray', variable: 'dark-gray', hex: '555555', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Mid Gray', variable: 'mid-gray', hex: '949494', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Stone', variable: 'stone', hex: 'bebebe', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Light Gray', variable: 'light-gray', hex: 'e4e4e4', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Fog', variable: 'fog', hex: 'f0f0f0', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Alabaster', variable: 'alabaster', hex: 'fafafa', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'White', variable: 'white', hex: 'ffffff', contrastPairings: [{name:'black', hex:'000000'}]}\n    ],\n    secondary: [\n        {name: 'Sky', variable: 'sky', hex: 'a5cdeb', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Ocean', variable: 'ocean', hex: '0f4bc3', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Indigo', variable: 'indigo', hex: '00237d', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Corn', variable: 'corn', hex: 'ffd25f', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Eggnog', variable: 'eggnog', hex: 'ffebc8', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Sand', variable: 'sand', hex: 'f0e6dc', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Sand Light', variable: 'sand-light', hex: 'fbf2e9', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Pale Pink', variable: 'pale-pink', hex: 'fac3be', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Salmon', variable: 'salmon', hex: 'eb786e', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Manderine', variable: 'manderine', hex: 'ff6432', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Orchid', variable: 'orchid', hex: '8c005a', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Dark Wood', variable: 'dark-wood', hex: '461e14', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Ginger Bread', variable: 'ginger-bread', hex: 'af783c', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Burnt Orange', variable: 'burnt-orange', hex: 'c75001', contrastPairings: [{name:'white', hex:'ffffff'}]}\n    ],\n    status: [\n        {name: 'Error Dark', variable: 'error-dark', hex: '721515', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Error Medium', variable: 'error-medium', hex: 'aa0000', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Error Light', variable: 'error-light', hex: 'ffd3d3', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Warning Dark', variable: 'warning-dark', hex: 'af2e02', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Warning Medium', variable: 'warning-medium', hex: 'bd5b00', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Warning Light', variable: 'warning-light', hex: 'ffdbba', contrastPairings: [{name:'black', hex:'000000'}]},\n        {name: 'Success Dark', variable: 'success-dark', hex: '244916', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Success Medium', variable: 'success-medium', hex: '23650c', contrastPairings: [{name:'white', hex:'ffffff'}]},\n        {name: 'Success Light', variable: 'success-light', hex: 'd7e8d1', contrastPairings: [{name:'black', hex:'000000'}]}\n    ],\n    dim: [\n        {name: 'Black Dim', variable: 'black-dim', hex: '000000', contrastPairings: [{name:'white', hex:'ffffff'}]},\n    ]\n};\n\nconst brandFonts = {\n    euclid: {name: 'Euclid', variable: ''},\n    gascogne: {name: 'Gascogne', variable: 'font-serif'}\n};\n\nmodule.exports = {\n    brandColors: brandColors,\n    brandFonts: brandFonts\n};\n"],"sourceRoot":""}